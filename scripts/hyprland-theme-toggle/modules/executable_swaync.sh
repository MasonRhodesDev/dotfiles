#!/bin/bash

# SwayNC notification daemon theme module

source "$(dirname "${BASH_SOURCE[0]}")/base.sh"

swaync_apply_theme() {
    local wallpaper="$1"
    local mode="$2"
    local state_file="$3"
    local colors_json="$4"
    
    local module_name="SwayNC"
    # Write directly to the config file (no longer managed by chezmoi)
    local style_file="$HOME/.config/swaync/style.css"
    
    # Check if SwayNC is installed
    if ! app_installed "swaync"; then
        log_module "$module_name" "Not installed, skipping"
        return 0
    fi
    
    log_module "$module_name" "Applying $mode theme"
    
    # Extract colors for current mode
    local surface=$(echo "$colors_json" | jq -r ".colors.${mode}.surface")
    local on_surface=$(echo "$colors_json" | jq -r ".colors.${mode}.on_surface")
    local surface_variant=$(echo "$colors_json" | jq -r ".colors.${mode}.surface_variant")
    local on_surface_variant=$(echo "$colors_json" | jq -r ".colors.${mode}.on_surface_variant")
    local primary=$(echo "$colors_json" | jq -r ".colors.${mode}.primary")
    local on_primary=$(echo "$colors_json" | jq -r ".colors.${mode}.on_primary")
    local secondary=$(echo "$colors_json" | jq -r ".colors.${mode}.secondary")
    local error=$(echo "$colors_json" | jq -r ".colors.${mode}.error")
    local on_error=$(echo "$colors_json" | jq -r ".colors.${mode}.on_error")
    local outline=$(echo "$colors_json" | jq -r ".colors.${mode}.outline")
    
    # Backup original style file if it exists
    if [[ -f "$style_file" ]]; then
        cp "$style_file" "${style_file}.backup"
    fi
    
    # Calculate shadow opacity based on mode
    local shadow_opacity="0.3"
    local button_highlight_opacity="0.06"
    if [[ "$mode" == "light" ]]; then
        shadow_opacity="0.15"
        button_highlight_opacity="0.02"
    fi
    
    # Generate new themed style.css (cleaned up version)
    cat > "$style_file" << EOF
/* swaync style - Generated by theme switcher */
* {
  font-family: "SF Pro Text", sans-serif;
  font-weight: normal;
  font-size: 14px;
}

/* Control Center Container */
.control-center {
  box-shadow: 0 0 12px 0 rgba(0, 0, 0, ${shadow_opacity});
  border-radius: 12px;
  margin: 16px;
  background-color: ${surface};
  color: ${on_surface};
  padding: 16px;
}

/* Widget Titles and Buttons */
.control-center .widget-title > label {
  color: ${on_surface};
  font-size: 1.3em;
  font-weight: 600;
}

.control-center .widget-title button {
  border-radius: 8px;
  color: ${on_surface};
  background-color: ${surface_variant};
  border: 1px solid ${outline};
  padding: 6px 12px;
  font-size: 13px;
}

.control-center .widget-title button:hover {
  background-color: ${primary};
  color: ${on_primary};
}

/* Widget Spacing */
.widget-dnd, .widget-volume, .widget-backlight, .widget-mpris, .widget-title {
  margin-bottom: 12px;
}

/* Floating Notifications */
.floating-notifications.background .notification-row .notification-background {
  box-shadow: 0 6px 16px 0 rgba(0, 0, 0, ${shadow_opacity});
  border-radius: 12px;
  margin: 16px;
  background-color: ${surface};
  color: ${on_surface};
  padding: 0;
  border: 1px solid ${outline};
}

.floating-notifications.background .notification-row .notification-background .notification {
  padding: 12px;
  border-radius: 12px;
}

.floating-notifications.background .notification-row .notification-background .notification .notification-content .summary {
  color: ${on_surface};
  font-size: 16px;
  font-weight: 600;
  margin-bottom: 6px;
  line-height: 1.3;
}

.floating-notifications.background .notification-row .notification-background .notification .notification-content .body {
  color: ${on_surface_variant};
  font-size: 14px;
  line-height: 1.4;
  opacity: 0.9;
}

.floating-notifications.background .notification-row .notification-background .close-button {
  margin: 8px;
  border-radius: 8px;
  background-color: ${error};
  color: ${on_error};
  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.1);
  min-width: 24px;
  min-height: 24px;
}

/* Control Center Notifications */
.control-center .notification-row .notification-background {
  border-radius: 8px;
  background-color: ${surface_variant};
  color: ${on_surface};
  margin-top: 12px;
  border: 1px solid ${outline};
}

.control-center .notification-row .notification-background .notification {
  padding: 10px;
  border-radius: 8px;
}

.control-center .notification-row .notification-background .notification .notification-content .summary {
  color: ${on_surface};
  font-size: 15px;
  font-weight: 600;
  line-height: 1.3;
  margin-bottom: 4px;
}

.control-center .notification-row .notification-background .notification .notification-content .body {
  color: ${on_surface_variant};
  font-size: 13px;
  line-height: 1.4;
  opacity: 0.9;
}

/* Widgets - Consolidated Styling */
.widget-dnd > switch {
  border-radius: 8px;
  background: ${surface_variant};
  border: 1px solid ${outline};
  box-shadow: none;
  min-height: 20px;
}

.widget-dnd > switch:checked {
  background: ${primary};
  color: ${on_primary};
}

.widget-volume, .widget-backlight {
  background: ${surface_variant};
  color: ${on_surface};
  border-radius: 8px;
  padding: 12px;
  border: 1px solid ${outline};
}

.widget-volume scale, .widget-backlight scale {
  background: transparent;
}

.widget-volume scale trough, .widget-backlight scale trough {
  background: ${outline};
  border-radius: 6px;
  min-height: 6px;
}

.widget-volume scale highlight, .widget-backlight scale highlight {
  background: ${primary};
  border-radius: 6px;
}

.widget-volume scale slider, .widget-backlight scale slider {
  background: ${primary};
  border: 2px solid ${surface};
  border-radius: 50%;
  min-width: 18px;
  min-height: 18px;
}

/* Media Player Widget */
.widget-mpris {
  background: ${surface_variant};
  color: ${on_surface};
  border-radius: 8px;
  padding: 12px;
  border: 1px solid ${outline};
}

.widget-mpris-player {
  background: transparent;
  color: ${on_surface};
  border-radius: 8px;
}

.widget-mpris-title {
  color: ${on_surface};
  font-weight: 600;
  font-size: 14px;
  line-height: 1.3;
}

.widget-mpris-subtitle {
  color: ${on_surface_variant};
  font-size: 13px;
  opacity: 0.9;
}

.widget-mpris button {
  background: transparent;
  color: ${on_surface};
  border: 1px solid ${outline};
  border-radius: 6px;
  padding: 6px 8px;
  min-width: 32px;
  min-height: 32px;
}

.widget-mpris button:hover {
  background: ${primary};
  color: ${on_primary};
}
EOF
    
    log_module "$module_name" "Generated themed style.css"
    
    # Reload SwayNC CSS to apply new theme
    if pgrep -x swaync >/dev/null; then
        log_module "$module_name" "Reloading SwayNC CSS"
        swaync-client -rs
    else
        log_module "$module_name" "SwayNC not running, no reload needed"
    fi
    
    return 0
}