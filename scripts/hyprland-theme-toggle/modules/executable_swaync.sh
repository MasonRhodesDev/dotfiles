#!/bin/bash

# SwayNC notification daemon theme module

source "$(dirname "${BASH_SOURCE[0]}")/base.sh"

swaync_apply_theme() {
    local wallpaper="$1"
    local mode="$2"
    local state_file="$3"
    local colors_json="$4"
    
    local module_name="SwayNC"
    local config_dir="$HOME/.config/swaync"
    local style_file="$config_dir/style.css"
    
    # Check if SwayNC is installed
    if ! app_installed "swaync"; then
        log_module "$module_name" "Not installed, skipping"
        return 0
    fi
    
    log_module "$module_name" "Applying $mode theme"
    
    # Extract colors for current mode
    local surface=$(echo "$colors_json" | jq -r ".colors.${mode}.surface")
    local on_surface=$(echo "$colors_json" | jq -r ".colors.${mode}.on_surface")
    local surface_variant=$(echo "$colors_json" | jq -r ".colors.${mode}.surface_variant")
    local on_surface_variant=$(echo "$colors_json" | jq -r ".colors.${mode}.on_surface_variant")
    local primary=$(echo "$colors_json" | jq -r ".colors.${mode}.primary")
    local on_primary=$(echo "$colors_json" | jq -r ".colors.${mode}.on_primary")
    local secondary=$(echo "$colors_json" | jq -r ".colors.${mode}.secondary")
    local error=$(echo "$colors_json" | jq -r ".colors.${mode}.error")
    local on_error=$(echo "$colors_json" | jq -r ".colors.${mode}.on_error")
    local outline=$(echo "$colors_json" | jq -r ".colors.${mode}.outline")
    
    # Backup original style file if it exists
    if [[ -f "$style_file" ]]; then
        cp "$style_file" "${style_file}.backup"
    fi
    
    # Generate new themed style.css (simplified version)
    cat > "$style_file" << EOF
/* swaync style - Generated by theme switcher */
* {
  font-family: "SF Pro Text", sans-serif;
  font-weight: normal;
  font-size: 14px;
}

.control-center {
  box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.3);
  border-radius: 12px;
  margin: 18px;
  background-color: ${surface};
  color: ${on_surface};
  padding: 14px;
}

.control-center .widget-title > label {
  color: ${on_surface};
  font-size: 1.3em;
}

.control-center .widget-title button {
  border-radius: 7px;
  color: ${on_surface};
  background-color: ${surface_variant};
  box-shadow: inset 0 1px 0 0 rgba(255, 255, 255, 0.02);
  border: 1px solid ${outline};
}

.control-center .widget-title button:hover {
  box-shadow: inset 0 1px 0 0 rgba(255, 255, 255, 0.06);
  background-color: ${primary};
  color: ${on_primary};
}

.floating-notifications.background .notification-row .notification-background {
  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.3);
  border-radius: 12px;
  margin: 18px;
  background-color: ${surface};
  color: ${on_surface};
  padding: 0;
}

.floating-notifications.background .notification-row .notification-background .notification {
  padding: 7px;
  border-radius: 12px;
}

.floating-notifications.background .notification-row .notification-background .notification .notification-content .summary {
  color: ${on_surface};
  font-size: 16px;
  font-weight: bold;
  margin-bottom: 4px;
}

.floating-notifications.background .notification-row .notification-background .notification .notification-content .body {
  color: ${on_surface_variant};
  font-size: 15px;
}

.floating-notifications.background .notification-row .notification-background .close-button {
  margin: 7px;
  border-radius: 6.5px;
  background-color: ${error};
  color: ${on_error};
  box-shadow: 0 1px 7px 0 rgba(0, 0, 0, 0.1);
}

.control-center .notification-row .notification-background {
  border-radius: 7px;
  background-color: ${surface_variant};
  color: ${on_surface};
  margin-top: 14px;
}

.control-center .notification-row .notification-background .notification {
  padding: 7px;
  border-radius: 7px;
}

.control-center .notification-row .notification-background .notification .notification-content .summary {
  color: ${on_surface};
  font-size: 1.1em;
}

.control-center .notification-row .notification-background .notification .notification-content .body {
  color: ${on_surface_variant};
  font-size: 0.9em;
}

.widget-dnd > switch {
  border-radius: 8px;
  background: ${surface_variant};
  border: 1px solid ${outline};
  box-shadow: none;
}

.widget-dnd > switch:checked {
  background: ${primary};
  color: ${on_primary};
}

/* Volume widget */
.widget-volume {
  background: ${surface_variant};
  color: ${on_surface};
  border-radius: 8px;
  padding: 8px;
}

.widget-volume scale {
  background: ${surface_variant};
}

.widget-volume scale trough {
  background: ${outline};
  border-radius: 4px;
  min-height: 4px;
}

.widget-volume scale highlight {
  background: ${primary};
  border-radius: 4px;
}

.widget-volume scale slider {
  background: ${primary};
  border: 2px solid ${surface};
  border-radius: 50%;
  min-width: 16px;
  min-height: 16px;
}

/* Media player widget */
.widget-mpris {
  background: transparent;
  color: ${on_surface};
  border-radius: 8px;
  padding: 8px;
}

.widget-mpris-player {
  background: transparent;
  color: ${on_surface};
  border-radius: 8px;
}

.widget-mpris-title {
  color: ${on_surface};
  font-weight: bold;
}

.widget-mpris-subtitle {
  color: ${on_surface_variant};
}

.widget-mpris button {
  background: transparent;
  color: ${on_surface};
  border: 1px solid ${outline};
  border-radius: 6px;
  padding: 4px;
}

.widget-mpris button:hover {
  background: ${primary};
  color: ${on_primary};
}

/* Backlight widget */
.widget-backlight {
  background: ${surface_variant};
  color: ${on_surface};
  border-radius: 8px;
  padding: 8px;
}

.widget-backlight scale trough {
  background: ${outline};
  border-radius: 4px;
  min-height: 4px;
}

.widget-backlight scale highlight {
  background: ${primary};
  border-radius: 4px;
}

.widget-backlight scale slider {
  background: ${primary};
  border: 2px solid ${surface};
  border-radius: 50%;
  min-width: 16px;
  min-height: 16px;
}
EOF
    
    log_module "$module_name" "Generated themed style.css"
    
    # Reload SwayNC CSS to apply new theme
    if pgrep -x swaync >/dev/null; then
        log_module "$module_name" "Reloading SwayNC CSS"
        swaync-client -rs
    else
        log_module "$module_name" "SwayNC not running, no reload needed"
    fi
    
    return 0
}